---
import Social from "../ui/Social.astro";
import { getCollection } from "astro:content";
import { useTranslations } from "@/i18n/utils.ts";

// Detect current language from URL
const allLocales = ["en", "fr", "de", "es"];
const pathname = Astro.url.pathname;
const firstSegment = pathname.split("/")[1];
const locale = allLocales.includes(firstSegment) ? firstSegment : "en";

const t = useTranslations(locale);

const [staticData] = await getCollection("staticData");
const {
  github,
  githubIconName,
  linkedin,
  linkedinIconName,
  instagram,
  instagramIconName,
  x,
  xIconName,
  email,
  emailIconName,
} = staticData.data;

const { items = [] }: { items: (keyof typeof menu)[] } = Astro.props as {
  items: (keyof typeof menu)[];
};

// The menu object only contains paths. Labels come from JSON files.
const menu = {
  about: { path: "/about-me" },
  blog: {
    path: "/blog/",
    dropdown: [{ key: "blog_all_posts", path: "/blog/posts/" }],
  },
  home: { path: "/#home" },
  experience: { path: "/#experience" },
  projects: { path: "/#projects" },
};

const baseClasses = {
  nav: "nav-links flex w-full justify-center gap-6 max-md:gap-3 max-md:py-6",
  link: "px-2 py-2 transition-all hover:text-mint-300 max-md:mx-auto max-md:w-full max-md:px-6 max-md:py-2 ",
  socialContainer: "flex items-center justify-center gap-5 md:hidden",
  dropdown: "relative group flex items-center",
  dropdownMenu:
    "absolute left-0 top-full hidden group-hover:block bg-white dark:bg-zinc-800 shadow-lg rounded-md py-2 min-w-[200px] z-50",
  dropdownItem:
    "block px-4 py-2 text-sm hover:bg-mint-100 dark:hover:bg-zinc-700 transition-colors",
} as const;
---

<nav class={baseClasses.nav} role="navigation" aria-label={t("header.main_nav_aria_label")}>
  {
    items.map((key: string) => {
      const item = menu[key as keyof typeof menu];
      if (!item) return null;

      if ("dropdown" in item) {
        return (
          <div class={baseClasses.dropdown}>
            <a
              href={`/${locale}${item.path}`}
              class={baseClasses.link}
              aria-label={t(`nav.${key}`)}
              aria-current={item.path === Astro.url.pathname ? "page" : undefined}
            >
              {t(`nav.${key}`)}
            </a>
            <div class={baseClasses.dropdownMenu}>
              {item.dropdown.map((dropdownItem) => (
                <a
                  href={`/${locale}${dropdownItem.path}`}
                  class={baseClasses.dropdownItem}
                  aria-label={t(`nav.${dropdownItem.key}`)}
                >
                  {t(`nav.${dropdownItem.key}`)}
                </a>
              ))}
            </div>
          </div>
        );
      }

      return (
        <a
          href={`/${locale}${item.path}`}
          class={baseClasses.link}
          aria-label={t(`nav.${key}`)}
          aria-current={item.path === Astro.url.pathname ? "page" : undefined}
        >
          {t(`nav.${key}`)}
        </a>
      );
    })
  }

  <div
    class={baseClasses.socialContainer}
    role="group"
    aria-label={t("footer.social_links_aria_label")}
  >
    {x && xIconName && <Social link={x} iconName={xIconName} />}
    {instagram && instagramIconName && <Social link={instagram} iconName={instagramIconName} />}
    {github && githubIconName && <Social link={github} iconName={githubIconName} />}
    {linkedin && linkedinIconName && <Social link={linkedin} iconName={linkedinIconName} />}
    {email && emailIconName && <Social link={`mailto:${email}`} iconName={emailIconName} />}
  </div>
</nav>
