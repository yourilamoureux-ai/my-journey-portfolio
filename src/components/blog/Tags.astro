---
import { getCollection } from 'astro:content';
import Tag from "../ui/Tag.astro";

const locale = Astro.currentLocale ?? 'en';

// 1. Fetch posts for the current language from the new content collection
const allPostsForLocale = await getCollection('blog', ({ id }) => id.startsWith(locale + '/'));

// 2. Filter out any posts that are marked as drafts
const publishedPosts = allPostsForLocale.filter(post => import.meta.env.PROD ? !post.data.draft : true);

// 3. Get all unique tags from the new 'post.data' structure
const tags = [...new Set(publishedPosts.map((post) => post.data.tags).flat())];

// Your existing variant logic is preserved
type VariantType = "default" | "vertical" | "compact";
const { variant = "default" } = Astro.props as { variant?: VariantType };
const baseClasses = "max-w-7xl";
const variantClasses: Record<VariantType, string> = {
    default: "max-lg:px-8 py-8 max-md:py-4 flex-wrap mx-auto gap-4 max-sm:gap-3 justify-center items-center flex flex-row",
    vertical: "gap-6 justify-start items-start flex flex-col",
    compact: "flex-wrap mx-auto gap-2 max-sm:gap-3 justify-start flex flex-row"
};
const classes = `${baseClasses} ${variantClasses[variant]}`;
---

<div id="tags" class={classes}>
    {tags.map((tag) => <Tag tag={tag}></Tag>)}
</div>