---
import ExperienceItem from "./ExperienceItem.astro";
import Heading from "../ui/Heading.astro";
import { Icon } from "astro-icon/components";
import { useTranslations } from '../../i18n/utils';

// Manually detect the current language from the URL
const allLocales = ['en', 'fr', 'de', 'es'];
const pathname = Astro.url.pathname;
const firstSegment = pathname.split('/')[1];
const locale = allLocales.includes(firstSegment) ? firstSegment : 'en';

const t = useTranslations(locale);

const { showTitle = true } = Astro.props;

// Define the shape of a single experience object for TypeScript
interface Experience {
  date: string;
  title: string;
  description: string;
  alignment: 'left' | 'right';
}

// The Experience data is now fetched from our translation helper
// We use 'as Experience[]' to tell TypeScript the shape of the data
const EXPERIENCE = t('experience.jobs') as Experience[];
---

<section class="py-8 px-8 max-md:py-4 mb-4 scroll-m-16" id="experience">
  <div class="flex flex-col pt-8 max-w-4xl mx-auto">
    {showTitle && (
      <div class="flex gap-4 items-center justify-center">
        <Icon class="text-3xl dark:text-white text-blacktext" name="briefcase" />
        <Heading text={t('experience.heading')} textGradient={t('experience.subheading')} level={2} />
      </div>
    )}

    <div class="relative max-md:mt-0 mt-8" aria-label={t('experience.heading')}>
      <div class="relative mt-10">
        {
          EXPERIENCE.map((experience) => (
            <ExperienceItem
              title={experience.title}
              description={experience.description}
              date={experience.date}
              alignment={experience.alignment}
            />
          ))
        }
      </div>
    </div>
  </div>
</section>