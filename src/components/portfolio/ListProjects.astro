---
import Project from "./Project.astro";
import Heading from "../ui/Heading.astro";
import { Icon } from "astro-icon/components";
import { useTranslations } from '@/i18n/utils.ts';

// Manually detect the current language from the URL
const allLocales = ['en', 'fr', 'de', 'es'];
const pathname = Astro.url.pathname;
const firstSegment = pathname.split('/')[1];
const locale = allLocales.includes(firstSegment) ? firstSegment : 'en';

const t = useTranslations(locale);

console.log(`--- DEBUGGING LISTPROJECTS [Locale: ${locale}] ---`);

interface ProjectPost {
  url: string;
  file: string;
  frontmatter: {
    title: string;
    description: string;
    pubDate: string;
    languages: string[];
    image: {
      url: string;
      alt: string;
    };
  };
}

// 1. Get the raw import object
const projectImports = import.meta.glob<ProjectPost>("../../pages/**/portfolio/projects/*.md", { eager: true });
console.log('1. Raw Glob Import:', projectImports);

// 2. Convert to an array
const allProjectsGlob: ProjectPost[] = Object.values(projectImports);
console.log('2. Glob Array (Before Filter):', allProjectsGlob);

// 3. Filter for the current language
const allPosts = allProjectsGlob.filter((post: ProjectPost) => {
  if (locale === 'en') {
    return !allLocales.some(lang => lang !== 'en' && post.file.includes(`/pages/${lang}/`));
  }
  return post.file.includes(`/pages/${locale}/`);
});
console.log('3. Filtered Posts (This should only contain posts for the current language):', allPosts);

// Sort by descending date (most recent first)
allPosts.sort(
  (a: ProjectPost, b: ProjectPost) =>
    new Date(b.frontmatter.pubDate).getTime() -
    new Date(a.frontmatter.pubDate).getTime(),
);
---