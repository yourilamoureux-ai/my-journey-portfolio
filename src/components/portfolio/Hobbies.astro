---
// 1. Using a direct relative path for the import to be more robust.
import { useTranslations } from '../../i18n/utils.ts';
import Hobbie from "./Hobbie.astro";

const locale = Astro.currentLocale;
const t = useTranslations(locale);

// 2. This is the key improvement: a safe runtime check.
const hobbiesData = t('home.hobbies.items');
// We check if the data is an array. If not, we use an empty array to prevent crashes.
const hobbies: string[] = Array.isArray(hobbiesData) ? hobbiesData : [];

// All of your existing variant logic is preserved.
interface Props {
    variant?: "default" | "vertical";
}
    
const baseClasses = "max-w-7xl gap-3 py-4 max-md:py-3";

const variants = {
    default: `${baseClasses} flex-wrap mx-auto max-md:gap-2 max-sm:gap-1 justify-start items-center flex flex-row`,
    vertical: `${baseClasses} max-sm:gap-2 justify-start items-start flex flex-col`,
} as const;

const { variant = "default" } = Astro.props as Props;
const classes = variants[variant];
---

<div id="tags" class={classes}>
    {hobbies.map((hobby) => <Hobbie tag={hobby} />)}
</div>